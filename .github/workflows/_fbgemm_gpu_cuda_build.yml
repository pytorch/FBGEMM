# Copyright (c) Meta Platforms, Inc. and affiliates.
# All rights reserved.
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# This callable workflow is used for building FBGEMM GPU/GenAI/HSTU CUDA wheels.
name: FBGEMM GPU/GenAI/HSTU CUDA Build

on:
  workflow_call:
    inputs:
      matrix:
        required: true
        type: string
      repo-ref:
        description: Repo ref/sha
        type: string
        required: true
        default: ""
      pytorch-channel-version:
        description: Package Channel + Version to Use for PyTorch Installation, in `<channel>[/<version>]` Format
        type: string
        required: false
        default: ""

jobs:
  # Build on CPU hosts and upload to GHA
  build_artifact:
    runs-on: ${{ matrix.host-machine.instance }}
    container:
      image: amazonlinux:2023
      options: --user root --privileged --pid=host
    defaults:
      run:
        shell: bash
    env:
      PRELUDE: .github/scripts/setup_env.bash
      BUILD_ENV: build_binary
      BUILD_TARGET: ${{ matrix.build-target }}
      BUILD_VARIANT: cuda
      BUILD_CUDA_VERSION: ${{ matrix.cuda-version }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(inputs.matrix) }}
    continue-on-error: true

    steps:
    - name: Setup Build Container
      run: yum update -y; yum install -y binutils findutils git pciutils sudo tar wget which xz

    - name: Checkout the Repository
      uses: actions/checkout@v4
      with:
        submodules: true
        ref: ${{ inputs.repo-ref }}

    - name: Display System Info
      run: . $PRELUDE; print_system_info

    - name: Display GPU Info
      run: . $PRELUDE; print_gpu_info

    - name: Setup Miniconda
      run: . $PRELUDE; setup_miniconda $HOME/miniconda

    - name: Create Conda Environment
      run: . $PRELUDE; create_conda_environment $BUILD_ENV ${{ matrix.python-version }}

    - name: Install C/C++ Compilers
      run: . $PRELUDE; install_cxx_compiler $BUILD_ENV ${{ matrix.compiler }}

    - name: Install Build Tools
      run: . $PRELUDE; install_build_tools $BUILD_ENV

    - name: Install CUDA
      run: . $PRELUDE; install_cuda $BUILD_ENV ${{ matrix.cuda-version }}

    # Install via PIP to avoid defaulting to the CPU variant if the GPU variant of the day is not ready
    - name: Install PyTorch (${{ inputs.pytorch-channel-version }})
      run: . $PRELUDE; install_pytorch_pip $BUILD_ENV ${{ inputs.pytorch-channel-version }} cuda/${{ matrix.cuda-version }}

    - name: Collect PyTorch Environment Info
      if: ${{ success() || failure() }}
      run: if . $PRELUDE && which conda; then collect_pytorch_env_info $BUILD_ENV; fi

    - name: Install cuDNN
      run: . $PRELUDE; install_cudnn $BUILD_ENV "$(pwd)/build_only/cudnn" ${{ matrix.cuda-version }}

    - name: Prepare FBGEMM_GPU Build
      run: . $PRELUDE; cd fbgemm_gpu; prepare_fbgemm_gpu_build $BUILD_ENV

    - name: Build FBGEMM_GPU Wheel
      run: . $PRELUDE; cd fbgemm_gpu; build_fbgemm_gpu_package $BUILD_ENV nightly ${{ matrix.build-target }}/cuda

    - name: Upload Built Wheel as GHA Artifact
      uses: actions/upload-artifact@v4
      with:
        name: fbgemm_${{ matrix.build-target }}_${{ matrix.host-machine.arch }}_${{ matrix.compiler }}_py${{ matrix.python-version }}_cu${{ matrix.cuda-version }}.whl
        path: fbgemm_gpu/dist/*.whl
        if-no-files-found: error
