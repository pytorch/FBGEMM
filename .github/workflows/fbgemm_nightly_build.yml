# Copyright (c) Meta Platforms, Inc. and affiliates.
# All rights reserved.
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

name: Push Binary Nightly

on:
  # PR Trigger (enable only for debugging)
  [ push, pull_request ]
  # Cron Trigger
  # schedule:
  #   - cron:  '45 03 * * *'
  # Manual trigger
  # workflow_dispatch:

jobs:
  # build on cpu hosts and upload to GHA
  build_on_cpu:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      PRELUDE: .github/scripts/setup_env.bash
      BUILD_ENV: build_binary
    strategy:
      matrix:
        os: [ linux.2xlarge ]
        python-version: [ "3.8", "3.9", "3.10" ]
        cuda-tag: [ "cu11" ]
    steps:
    - name: Checkout the Repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Display System Info
      run: . $PRELUDE; print_system_info

    - name: Setup Miniconda
      run: |
        . $PRELUDE; setup_miniconda $HOME/miniconda
        echo "${HOME}/miniconda/bin" >> $GITHUB_PATH
        echo "CONDA=${HOME}/miniconda" >> $GITHUB_PATH

    - name: Create Conda Environment
      run: . $PRELUDE; create_conda_environment $BUILD_ENV ${{ matrix.python-version }}

    - name: Install C/C++ Compilers
      run: . $PRELUDE; install_cxx_compiler $BUILD_ENV

    - name: Install Build Tools
      run: . $PRELUDE; install_build_tools $BUILD_ENV

    - name: Install CUDA
      run: . $PRELUDE; install_cuda $BUILD_ENV 11.7.1

    - name: Install PyTorch Nightly
      run: . $PRELUDE; install_pytorch_conda $BUILD_ENV nightly

    - name: Install cuDNN
      run: . $PRELUDE; install_cudnn $BUILD_ENV "$(pwd)/build_only/cudnn" 11.7.1

    - name: Prepare FBGEMM Build
      run: . $PRELUDE; cd fbgemm_gpu; prepare_fbgemm_build $BUILD_ENV

    - name: Build FBGEMM_GPU Nightly
      run: . $PRELUDE; cd fbgemm_gpu; build_fbgemm_package $BUILD_ENV fbgemm_gpu_nightly

    - name: Upload Built Wheel as GHA Artifact
      uses: actions/upload-artifact@v2
      with:
        name: fbgemm_gpu_nightly_${{ matrix.python-version }}_${{ matrix.cuda-tag }}.whl
        path: fbgemm_gpu/dist/fbgemm_gpu_nightly-*.whl


  # download from GHA, test on gpu and push to pypi
  test_on_gpu:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      PRELUDE: .github/scripts/setup_env.bash
      BUILD_ENV: build_binary
    strategy:
      matrix:
        os: [ linux.g5.4xlarge.nvidia.gpu ]
        python-version: [ "3.8", "3.9", "3.10" ]
        cuda-tag: [ "cu11" ]
    needs: build_on_cpu
    steps:
    - name: Checkout the Repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Display System Info
      run: . $PRELUDE; print_system_info

    - name: Display EC2 Info
      run: . $PRELUDE; print_ec2_info

    - name: Setup Miniconda
      run: |
        . $PRELUDE; setup_miniconda $HOME/miniconda
        echo "${HOME}/miniconda/bin" >> $GITHUB_PATH
        echo "CONDA=${HOME}/miniconda" >> $GITHUB_PATH

    - name: Create Conda Environment
      run: . $PRELUDE; create_conda_environment $BUILD_ENV ${{ matrix.python-version }}

    - name: Install CUDA
      run: . $PRELUDE; install_cuda $BUILD_ENV 11.7.1

    # - name: Install CUDA 11.3
    #   shell: bash
    #   run: |
    #     sudo yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    #     sudo yum-config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo
    #     sudo yum clean expire-cache
    #     sudo yum install -y nvidia-driver-latest-dkms
    #     sudo yum install -y cuda-11-3
    #     sudo yum install -y cuda-drivers
    #     sudo yum install -y libcudnn8-devel
    # - name: setup Path
    #   run: |
    #     echo /usr/local/cuda-11.3/bin >> $GITHUB_PATH
    #     echo /usr/local/bin >> $GITHUB_PATH
    # - name: nvcc check
    #   run: |
    #     nvcc --version

    - name: Install PyTorch Nightly
      run: . $PRELUDE; install_pytorch_conda $BUILD_ENV nightly

    - name: Prepare FBGEMM Build
      run: . $PRELUDE; cd fbgemm_gpu; prepare_fbgemm_build $BUILD_ENV

    - name: Download Wheel Artifact from GHA
      uses: actions/download-artifact@v2
      with:
        name: fbgemm_gpu_nightly_${{ matrix.python-version }}_${{ matrix.cuda-tag }}.whl

    - name: Display structure of downloaded files
      run: ls -R

    - name: Install FBGEMM_GPU Nightly
      run: |
        rm -rf dist
        conda run -n build_binary \
          python -m pip install *.whl
    - name: Test fbgemm_gpu installation
      shell: bash
      run: |
        conda run -n build_binary \
          python -c "import fbgemm_gpu"
    - name: Test with pytest
      # Remove this line when we fixed all the unit tests
      continue-on-error: true
      run: |
        conda run -n build_binary \
          python -m pip install pytest
        # The tests with single CPU core on a less powerful testing GPU in GHA
        # can take 5 hours.
        timeout 600s conda run -n build_binary \
          python -m pytest -v -s -W ignore::pytest.PytestCollectionWarning --continue-on-collection-errors

    - name: Push FBGEMM_GPU Binary to PYPI
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: |
        conda run -n build_binary python -m pip install twine
        # Official PYPI website
        conda run -n build_binary \
          python -m twine upload \
            --username __token__ \
            --password "$PYPI_TOKEN" \
            --skip-existing \
            --verbose \
            fbgemm_gpu_nightly-*.whl
