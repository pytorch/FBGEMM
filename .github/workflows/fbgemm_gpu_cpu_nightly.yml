# Copyright (c) Meta Platforms, Inc. and affiliates.
# All rights reserved.
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

name: FBGEMM_GPU-CPU Nightly Build

on:
  # PR Trigger (enabled only for debugging)
  #
  pull_request:
    branches:
      - main

  # Push Trigger (enable to catch errors coming out of multiple merges)
  #
  push:
    branches:
      - main

  # Cron Trigger (UTC)
  #
  # Based on the Conda page for PyTorch-nightly, the CPU nightly releases appear
  # around 00:30 PST every day
  #
  schedule:
    - cron:  '45 12 * * *'

  # Manual Trigger
  #
  workflow_dispatch:

concurrency:
  # Cancel previous runs in the PR if a new commit is pushed
  # https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Build on CPU hosts, run tests, and upload to GHA
  build_artifact:
    runs-on: linux.4xlarge
    container:
      image: amazonlinux:2023
      options: --user root
    defaults:
      run:
        shell: bash
    env:
      PRELUDE: .github/scripts/setup_env.bash
      BUILD_ENV: build_binary
    continue-on-error: true
    strategy:
      # Don't fast-fail all the other builds if one of the them fails
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]

    steps:
    - name: Setup Build Container
      run: yum update -y; yum install -y binutils findutils git pciutils sudo wget which

    - name: Checkout the Repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Display System Info
      run: . $PRELUDE; print_system_info

    - name: Display GPU Info
      run: . $PRELUDE; print_gpu_info

    - name: Setup Miniconda
      run: . $PRELUDE; setup_miniconda $HOME/miniconda

    - name: Create Conda Environment
      run: . $PRELUDE; create_conda_environment $BUILD_ENV ${{ matrix.python-version }}

    - name: Install C/C++ Compilers
      run: . $PRELUDE; install_cxx_compiler $BUILD_ENV

    - name: Install Build Tools
      run: . $PRELUDE; install_build_tools $BUILD_ENV

    - name: Install PyTorch-CPU Nightly
      run: . $PRELUDE; install_pytorch_conda $BUILD_ENV nightly cpu

    - name: Prepare FBGEMM_GPU Build
      run: . $PRELUDE; cd fbgemm_gpu; prepare_fbgemm_gpu_build $BUILD_ENV

    - name: Build FBGEMM_GPU Nightly (CPU version)
      run: . $PRELUDE; cd fbgemm_gpu; build_fbgemm_gpu_package $BUILD_ENV fbgemm_gpu_nightly cpu

    - name: Upload Built Wheel as GHA Artifact
      uses: actions/upload-artifact@v3
      with:
        name: fbgemm_gpu_nightly_cpu_${{ matrix.python-version }}.whl
        path: fbgemm_gpu/dist/fbgemm_gpu_nightly_cpu-*.whl


  # Download the built artifact from GHA, test on GPU, and push to PyPI
  test_and_publish_artifact:
    runs-on: linux.4xlarge
    container:
      image: amazonlinux:2023
      options: --user root
    defaults:
      run:
        shell: bash
    env:
      PRELUDE: .github/scripts/setup_env.bash
      BUILD_ENV: build_binary
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]
    needs: build_artifact

    steps:
    - name: Setup Build Container
      run: yum update -y; yum install -y binutils findutils git pciutils sudo wget which

    - name: Checkout the Repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Download Wheel Artifact from GHA
      uses: actions/download-artifact@v3
      with:
        name: fbgemm_gpu_nightly_cpu_${{ matrix.python-version }}.whl

    - name: Display System Info
      run: . $PRELUDE; print_system_info; print_ec2_info

    - name: Display GPU Info
      run: . $PRELUDE; print_gpu_info

    - name: Setup Miniconda
      run: . $PRELUDE; setup_miniconda $HOME/miniconda

    - name: Create Conda Environment
      run: . $PRELUDE; create_conda_environment $BUILD_ENV ${{ matrix.python-version }}

    - name: Install PyTorch Nightly
      run: . $PRELUDE; install_pytorch_conda $BUILD_ENV nightly cpu

    - name: Prepare FBGEMM_GPU Build
      run: . $PRELUDE; cd fbgemm_gpu; prepare_fbgemm_gpu_build $BUILD_ENV

    - name: Install FBGEMM_GPU Nightly (CPU version)
      run: |
        . $PRELUDE
        pwd; ls -la .
        install_fbgemm_gpu_package $BUILD_ENV *.whl

    - name: Test with PyTest
      timeout-minutes: 10
      run: . $PRELUDE; cd fbgemm_gpu/test; run_fbgemm_gpu_tests $BUILD_ENV cpu

    - name: Push FBGEMM_GPU Nightly (CPU version) Binary to PYPI
      if: ${{ github.event_name != 'pull_request' && github.event_name != 'push' }}
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: . $PRELUDE; publish_to_pypi $BUILD_ENV fbgemm_gpu_nightly_cpu-*.whl "$PYPI_TOKEN"
